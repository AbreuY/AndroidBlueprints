apply plugin: 'com.android.application'
apply plugin: 'eu.davidea.grabver'

versioning {
    major 1
    minor 0
    preRelease = 'alpha1'
}

android {
    compileSdkVersion targetSdk
    buildToolsVersion buildTools
    defaultConfig {
        applicationId 'eu.davidea.starterapp'
        minSdkVersion minSdk
        targetSdkVersion targetSdk
        versionCode versioning.code
        versionName versioning.name

        // https://medium.com/@chrisbanes/appcompat-v23-2-age-of-the-vectors-91cbafa87c88
        // https://developer.android.com/studio/write/vector-asset-studio.html
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'

        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def file = output.outputFile
                def fileName = 'starter-app-v' + versioning.name + '-c' + versioning.code + '.apk'
                output.outputFile = new File(file.parentFile, fileName)
            }
        }
    }
    // Configure only for each module that uses Java 8 language features
    // (either in its source code or through dependencies).
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    buildTypes {
        debug {
            versionNameSuffix ' build'
            minifyEnabled false
        }
        release {
            zipAlignEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    lintOptions {
        abortOnError false
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // Test
    androidTestCompile supportDependencies.annotations
    androidTestCompile 'com.android.support.test:runner:1.0.1'
    androidTestCompile 'com.android.support.test:rules:1.0.1'
    androidTestCompile('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'org.robolectric:robolectric:3.4.2'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.10.0'

    // Support Libraries
    compile supportDependencies.constraintLayout
    compile supportDependencies.appcompat
    compile supportDependencies.cardview
    compile supportDependencies.customtabs
    compile supportDependencies.support_v13
    compile supportDependencies.preference_v7
    compile supportDependencies.preference_v14
    compile supportDependencies.vectorDrawable
    compile(supportDependencies.design) {
        exclude module: 'support-v4'
        exclude module: 'support-annotations'
    }
    compile(supportDependencies.recyclerview) {
        exclude module: 'support-v4';
        exclude module: 'support-annotations'
    }

    // Flexible Adapter - https://github.com/davideas/FlexibleAdapter
    compile libraries.flexibleAdapter

    // Firebase
    compile libraries.firebaseConfig
    compile libraries.firebaseMessaging

    // Google Maps - https://developers.google.com/maps/documentation/android-api/
    compile libraries.googleMaps

    // GSon, Retrofit and OkHttp
    compile libraries.gson
    compile libraries.gsonConverter
    compile libraries.retrofit
    compile libraries.okhttp_logging

    // Timber (Logger) - https://github.com/JakeWharton/timber
    compile libraries.timber

    // Glide (Image Loader & Caching) or Facebook Fresco
    compile libraries.glide
    //annotationProcessor libraries.glideCompiler
    compile libraries.fresco

    // RxJava & RxAndroid
    compile libraries.rxAndroid
    compile libraries.rxJava

    // Butter Knife (View Injector) - https://github.com/JakeWharton/butterknife
    compile libraries.butterKnife
    annotationProcessor libraries.butterKnifeCompiler

    // UI Widgets
    compile widgets.flipView

    // Iconics - https://github.com/mikepenz/Android-Iconics
    compile widgets.iconics_core
    compile widgets.iconics_views
    compile widgets.iconics_cmd

    // Facebook SDK - https://developers.facebook.com/docs/android
    compile libraries.facebook_sdk

}