apply plugin: 'com.android.application'
apply plugin: 'eu.davidea.grabver'

versioning {
    major 1
    minor 0
    preRelease = 'alpha1'
}

android {
    compileSdkVersion targetSdk
    buildToolsVersion buildTools
    defaultConfig {
        applicationId 'eu.davidea.starterapp'
        minSdkVersion minSdk
        targetSdkVersion targetSdk
        versionCode versioning.code
        versionName versioning.name

        // https://medium.com/@chrisbanes/appcompat-v23-2-age-of-the-vectors-91cbafa87c88
        // https://developer.android.com/studio/write/vector-asset-studio.html
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        android.applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "starter-app-${variant.name}-${variant.versionName}-c${versioning.code}.apk"
            }
        }
    }
    // Configure only for each module that uses Java 8 language features
    // (either in its source code or through dependencies).
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        debug {
            versionNameSuffix ' debug'
            minifyEnabled false
            buildConfigField 'String', 'API_URL', '"https://10.0.2.2:8443/starter/api/"'
        }
        offline {
            initWith(buildTypes.debug)
            versionNameSuffix ' offline'
            buildConfigField 'String', 'API_URL', '""'
        }
        release {
            zipAlignEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'API_URL', '"https://api.starter.com/"'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    lintOptions {
        abortOnError false
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Arch
    implementation archDependencies.lifecycle
    implementation archDependencies.lifecycleExtensions
    annotationProcessor archDependencies.lifecycleCompiler

    // Room
    implementation archDependencies.room
    implementation archDependencies.roomRxJava2
    annotationProcessor archDependencies.roomCompiler

    // Support Libraries
    implementation supportDependencies.constraintLayout
    implementation supportDependencies.appcompat
    implementation supportDependencies.cardView
    implementation supportDependencies.customTabs
    implementation supportDependencies.support_v13
    implementation supportDependencies.preference_v7
    implementation supportDependencies.preference_v14
    implementation supportDependencies.vectorDrawable
    compile(supportDependencies.design) {
        exclude module: 'support-v4'
        exclude module: 'support-annotations'
    }
    compile(supportDependencies.recyclerView) {
        exclude module: 'support-v4';
        exclude module: 'support-annotations'
    }

    // Timber (Logger) - https://github.com/JakeWharton/timber
    implementation libraries.timber

    // RxJava & RxAndroid
    implementation libraries.rxAndroid
    implementation libraries.rxJava

    //D2
    implementation libraries.dagger
    implementation libraries.daggerAndroid
    annotationProcessor libraries.daggerCompiler

    // Butter Knife (View Injector) - https://github.com/JakeWharton/butterknife
    implementation libraries.butterKnife
    annotationProcessor libraries.butterKnifeCompiler

    // Firebase
    implementation libraries.firebaseConfig
    implementation libraries.firebaseMessaging

    // Google Maps - https://developers.google.com/maps/documentation/android-api/
    implementation libraries.googleMaps

    // GSon, Retrofit and OkHttp
    implementation libraries.gson
    implementation libraries.gsonConverter
    implementation libraries.retrofit
    implementation libraries.okhttpLogging

    // Timber (Logger) - https://github.com/JakeWharton/timber
    implementation libraries.timber

    // Glide (Image Loader & Caching) or Facebook Fresco
    implementation libraries.glide
    annotationProcessor libraries.glideCompiler
    implementation libraries.fresco

    // Flexible Adapter - https://github.com/davideas/FlexibleAdapter
    implementation libraries.flexibleAdapter

    // UI Widgets
    implementation widgets.flipView

    // Iconics - https://github.com/mikepenz/Android-Iconics
    implementation widgets.iconicsCore
    implementation widgets.iconicsViews
    implementation widgets.iconicsCommunity

    // Facebook SDK - https://developers.facebook.com/docs/android
    implementation libraries.facebookSdk

    // Test
    androidTestImplementation supportDependencies.annotations
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test:rules:1.0.1'
    androidTestCompile('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })
    testImplementation 'org.robolectric:robolectric:3.4.2'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.10.0'

}